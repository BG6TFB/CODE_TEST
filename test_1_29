#include<stdio.h>

//int count_bit(unsigned int n)
//{
//	int count=0;
//	while(n)
//	{
//		if(n%2==1)
//		{
//			count++;
//		}
//		n=n/2;
//	}
//	return count;
//}


//特别经典
//int count_bit(int n)
//{
//	int count=0;
//	while(n)
//	{
//		n=n&(n-1);
//		count++;
//	}
//	return count;
//}
//
//int main()
//{
//	int count=0;
//	int a=0;
//	scanf("%d",&a);
//	//写一个函数求a的二进制(补码)表示中有几个1
//	count = count_bit(a);
//	printf("count = %d\n",count);
//	return 0;
//}


//
//void print(int n )
//{
//	int i=0;
//	printf("奇数位");
//	for(i=30;i>=0;i-=2)
//	{
//		printf("%d ",(n>>i)&1);
//	}
//	printf("\n");
//	printf("偶数位");
//	for(i=31;i>=1;i-=2)
//	{
//		printf("%d ",(n>>i)&1);
//	}
//}
//
//
//int main()
//{
//	int m=0;
//	scanf("%d",&m);
//	print(m);
//	return 0;
//
//}



void print(int* p,int sz)
{
	int i=0;
	for(i=0;i<sz;i++)
	{
		printf("%d ",*(p+i));
	}
}

int main()
{
	int arr[]={1,2,3,4,5,6,7,8,9};
	int sz=sizeof(arr)/sizeof(arr[0]);
	print(arr,sz);
	return 0;
}
