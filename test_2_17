//#include<stdio.h>
//#include<string.h>
//void reverse(char* str)
//{
//
//	int len=strlen(str);
//	char* left=str;
//	char* right=str+len-1;
//
//	while(left<right)
//	{
//		char tmp=*left;
//		*left=*right;
//		*right=tmp;
//		left++;
//		right--;
//	}
//
//}
//
//int main()
//{
//	char arr[256]={0};
//	scanf("%s",arr);
//	//逆序函数
//	reverse(arr);
//	printf("%s\n",arr);
//	return 0;
//}

//杨氏矩阵
#include<stdio.h>

//int find(int arr[3][3],int k,int row,int col)
//{
//	int x=0;
//	int y=col-1;
//	while(y>=0&&x<=row-1)
//	{
//		if(arr[x][y]>k)
//	{
//		y--;
//	}
//	else if(arr[x][y]<k)
//	{
//		x++;
//	}
//	else
//	{
//		return 1;
//	}
//	}
//	//找不到
//	return 0;
//}


int find(int arr[3][3],int k,int* px,int* py)
{
	int x=0;
	int y=*py-1;
	while(y>=0&&x<=*px-1)
	{
		if(arr[x][y]>k)
	{
		y--;
	}
	else if(arr[x][y]<k)
	{
		x++;
	}
	else
	{
		*px=x;
		*py=y;
		return 1;
	}
	}
	//找不到
	*px=-1;
	*py=-1;
	return 0;
}

int main()
{
	int arr[3][3]={{1,2,3},{4,5,6},{7,8,9}};
	int k=7;
	int x=3;
	int y=3;
	int ret=find(arr,k,&x,&y);
	if(ret==1)
	{
		printf("ok\n");
		printf("%d %d",x,y);
	}
	else
	{
		printf("no");
	}
	return 0;
}
